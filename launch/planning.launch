<launch>
  <!-- By default we do not overwrite the URDF. Change the following to true to change the default
  behavior -->
  <arg name="load_gripper" default="true" />
  <arg name="load_robot_description" default="true" />
  <arg name="arm_id" default="panda" />


  <group>
    <!-- Load URDF -->
    <param name="robot_description"
      command="xacro '$(find franka_description)/robots/panda/panda.urdf.xacro' arm_id:=$(arg arm_id) hand:=true" />

    <rosparam param="initial_joints">[0.0, -0.785, 0.0, -2.356, 0.0, 1.571, 0.785, 0.035]</rosparam>

    <!-- Publish static tf for world -> $(arg prefix)_link0 -->
    <node name="virtual_joint" pkg="tf2_ros" type="static_transform_publisher"
      args="0 0 0 0 0 0 world $(arg arm_id)_link0" />


    <!-- Publish joint states -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <rosparam param="source_list">[target_joint_states]</rosparam>
    </node>

    <!-- Given the published joint states, publish tf for all robot links -->
    <node name="rsp" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" />

  </group>

  <arg name="launch_prefix" value="" />
  <arg name="command_args" value="" />

  <arg name="pipeline" default="ompl" />
  <arg name="allow_trajectory_execution" default="false" />
  <arg name="moveit_controller_manager" default="simple" />
  <arg name="fake_execution_type" default="interpolate" />
  <arg name="max_safe_path_cost" default="1" />
  <arg name="publish_monitored_planning_scene" default="true" />


  <arg name="capabilities" default="" />
  <arg name="disable_capabilities" default="" />

  <group>
    <node name="sot_move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group"
      type="move_group" respawn="false" output="screen" args="$(arg command_args)">
      <!-- Set the display variable, in case OpenGL code is used internally -->
      <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

      <param name="allow_trajectory_execution" value="false" />
      <param name="sense_for_plan/max_safe_path_cost" value="$(arg max_safe_path_cost)" />
      <param name="default_planning_pipeline" value="sot" />
      <param name="capabilities" value="$(arg capabilities)" />
      <param name="disable_capabilities" value="$(arg disable_capabilities)" />

      <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual
      robot -->
      <param name="planning_scene_monitor/publish_planning_scene"
        value="$(arg publish_monitored_planning_scene)" />
      <param name="planning_scene_monitor/publish_geometry_updates"
        value="$(arg publish_monitored_planning_scene)" />
      <param name="planning_scene_monitor/publish_state_updates"
        value="$(arg publish_monitored_planning_scene)" />
      <param name="planning_scene_monitor/publish_transforms_updates"
        value="$(arg publish_monitored_planning_scene)" />
    </node>
  </group>


  <!-- Run Rviz -->
  <node name="$(anon rviz)" pkg="rviz" type="rviz" output="screen"
    args="-d $(dirname)/planning.rviz" />
</launch>
